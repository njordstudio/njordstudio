---
import BaseLayout from '../../layouts/BaseLayout.astro'

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.mdx');

  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: {
        posts: filteredPosts,
        uniqueTags: uniqueTags },
    };
  });
}

const { tag } = Astro.params;
const { posts, uniqueTags } = Astro.props;
---

<BaseLayout title={tag ?? 'Projects'}>

  <div class="tagsList">
    <a href="/projects/" class="tagItem"><button>All</button></a>
    {uniqueTags?.map((tag) => (
      <a href={`/projects/${tag}`} class="tagItem"><button>{tag}</button></a>
    ))}
  </div>

  <div class="articlesList content">

    {posts?.slice().sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date)).map((story, index) => (
      <a href={story.url} class="articleItem" key={index}>
          <img class="articleImg" src={story.frontmatter.image.url} alt={story.frontmatter.image.alt} />
          <div class="articleItemInfo">
              <h2>{story.frontmatter.title}</h2>
              <p class="articleDescription">{story.frontmatter.description}</p>
              {/* <p class="articleAuthor">Written by: {story.frontmatter.author}</p> */}
          </div>
      </a>
    ))}

  </div>

</BaseLayout>